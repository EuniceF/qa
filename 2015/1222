1.
function foo1()
{
  return {
      bar: "hello"
  };
}

function foo2()
{
  return
  {
      bar: "hello"
  };
}
2：
if (!("a" in window)) {
    var a = 1;
}
alert(a);
3：
var a = 1,
    b = function a(x) {
        x && a(--x);
    };
alert(a);
4：
function a(x) {
    return x * 2;
}
var a;
alert(a);
5：
function b(x, y, a) {
    arguments[2] = 10;
    alert(a);
}
b(1, 2, 3);

6：
function a() {
    alert(this);
}
a.call(null);

7：
找出数字数组中最大的元素（使用Match.max函数）
8：
转化一个数字数组为function数组（每个function都弹出相应的数字）
9：
给object数组进行排序（排序条件是每个元素对象的属性个数）
10：
利用JavaScript打印出Fibonacci数（不使用全局变量）
11：
实现如下语法的功能：var a = (5).plus(3).minus(6); //2
12：
实现如下语法的功能：var a = add(2)(3)(4); //9


1.附加题 模板引擎实践
HTML
<!doctype html public 'ahh hell yeah'>
<html>
<head>
    <meta charset=utf-8>
    <title>Simple Templating</title>
</head>
<body>
   
  <div class="result"></div>
   
  <script type="template" id="template">
    <h2> 
      <a href="{{href}}">
        {{title}} 
      </a>
    </h2>
    <img src="{{imgSrc}}" alt="{{title}}">
  </script>
 
</body>
</html>
数据：
var data = [
    {
      title: "Create a Sticky Note Effect in 5 Easy Steps with CSS3 and HTML5",
      href: "http://net.tutsplus.com/tutorials/html-css-techniques/create-a-sticky-note-effect-in-5-easy-steps-with-css3-and-html5/",
      imgSrc: "https://d2o0t5hpnwv4c1.cloudfront.net/771_sticky/sticky_notes.jpg"
    },
    {
      title: "Nettuts+ Quiz #8",
      href: "http://net.tutsplus.com/articles/quizzes/nettuts-quiz-8-abbreviations-darth-sidious-edition/",
      imgSrc: "https://d2o0t5hpnwv4c1.cloudfront.net/989_quiz2jquerybasics/quiz.jpg"
    },
    {
      title: "WordPress Plugin Development Essentials",
      href: "http://net.tutsplus.com/tutorials/wordpress/wordpress-plugin-development-essentials/",
      imgSrc: "https://d2o0t5hpnwv4c1.cloudfront.net/1101_wpPlugins/wpplugincourse.png"
    }    
  ]

2.附加题 实现下列语法（@符号随意。。）
@{var userName= "邓星林";}
    <span>@userName</span>
输出：
    <span>邓星林</span>
   
类似的：
@{var cout=100;}  
<p>这是第 @cout 个进球 </p> 


Route篇：（不用插件，不用jquery，纯用js）
1.实现判断浏览器类型，浏览器版本，浏览器语言。（navigator.userAgent）
2.实现监听location.hash改变。
（注意ie8版本之前与后来的写法。）


